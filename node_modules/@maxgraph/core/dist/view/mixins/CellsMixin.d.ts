import type { Graph } from '../Graph';
type PartialGraph = Pick<Graph, 'getView' | 'getStylesheet' | 'batchUpdate' | 'getDataModel' | 'fireEvent' | 'getDefaultParent' | 'getCurrentRoot' | 'getOverlap' | 'isRecursiveResize' | 'getCellRenderer' | 'getMaximumGraphBounds' | 'isExportEnabled' | 'isImportEnabled' | 'getImageFromBundles' | 'getSelectionCells' | 'getSelectionCell' | 'addAllEdges' | 'getAllEdges' | 'isCloneInvalidEdges' | 'isAllowDanglingEdges' | 'resetEdges' | 'isResetEdgesOnResize' | 'isResetEdgesOnMove' | 'isConstrainChild' | 'cellConnected' | 'isDisconnectOnMove' | 'isConstrainRelativeChildren' | 'disconnectGraph' | 'getEdgeValidationError' | 'getFoldingImage' | 'isHtmlLabel' | 'isGridEnabled' | 'snap' | 'getGridSize' | 'isAllowNegativeCoordinates' | 'setAllowNegativeCoordinates' | 'getEventTolerance' | 'isSwimlane' | 'getStartSize'>;
type PartialCells = Pick<Graph, 'cellsResizable' | 'cellsBendable' | 'cellsSelectable' | 'cellsDisconnectable' | 'autoSizeCells' | 'autoSizeCellsOnAdd' | 'cellsLocked' | 'cellsCloneable' | 'cellsDeletable' | 'cellsMovable' | 'extendParents' | 'extendParentsOnAdd' | 'extendParentsOnMove' | 'getBoundingBox' | 'removeStateForCell' | 'getCurrentCellStyle' | 'getCellStyle' | 'postProcessCellStyle' | 'setCellStyle' | 'toggleCellStyle' | 'toggleCellStyles' | 'setCellStyles' | 'toggleCellStyleFlags' | 'setCellStyleFlags' | 'alignCells' | 'cloneCell' | 'cloneCells' | 'addCell' | 'addCells' | 'cellsAdded' | 'autoSizeCell' | 'removeCells' | 'cellsRemoved' | 'toggleCells' | 'cellsToggled' | 'updateCellSize' | 'cellSizeUpdated' | 'getPreferredSizeForCell' | 'resizeCell' | 'resizeCells' | 'cellResized' | 'cellsResized' | 'resizeChildCells' | 'constrainChildCells' | 'scaleCell' | 'extendParent' | 'importCells' | 'moveCells' | 'cellsMoved' | 'translateCell' | 'getCellContainmentArea' | 'constrainChild' | 'getChildCells' | 'getCellAt' | 'getCells' | 'getCellsBeyond' | 'intersects' | 'isValidAncestor' | 'isCellLocked' | 'isCellsLocked' | 'setCellsLocked' | 'getCloneableCells' | 'isCellCloneable' | 'isCellsCloneable' | 'setCellsCloneable' | 'getExportableCells' | 'canExportCell' | 'getImportableCells' | 'canImportCell' | 'isCellSelectable' | 'isCellsSelectable' | 'setCellsSelectable' | 'getDeletableCells' | 'isCellDeletable' | 'isCellsDeletable' | 'setCellsDeletable' | 'isCellRotatable' | 'getMovableCells' | 'isCellMovable' | 'isCellsMovable' | 'setCellsMovable' | 'isCellResizable' | 'isCellsResizable' | 'setCellsResizable' | 'isCellBendable' | 'isCellsBendable' | 'setCellsBendable' | 'isAutoSizeCell' | 'isAutoSizeCells' | 'setAutoSizeCells' | 'isExtendParent' | 'isExtendParents' | 'setExtendParents' | 'isExtendParentsOnAdd' | 'setExtendParentsOnAdd' | 'isExtendParentsOnMove' | 'setExtendParentsOnMove' | 'getCursorForCell' | 'getCellBounds' | 'getBoundingBoxFromGeometry'>;
type PartialType = PartialGraph & PartialCells;
export declare const CellsMixin: PartialType;
export {};
