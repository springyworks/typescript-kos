import type { Graph } from '../Graph';
type PartialGraph = Pick<Graph, 'fireEvent' | 'isEnabled' | 'getCellAt' | 'isCellSelected' | 'selectCellForEvent' | 'clearSelection' | 'isCellEditable' | 'isEditing' | 'startEditingAtCell' | 'getPlugin' | 'getView' | 'getContainer' | 'getPanDx' | 'getPanDy' | 'getEventSource' | 'setEventSource' | 'isAutoScroll' | 'getGraphBounds' | 'scrollPointToVisible' | 'isIgnoreScrollbars' | 'isTranslateToScrollPosition' | 'isAutoExtend' | 'stopEditing' | 'getBorder' | 'getMinimumContainerSize' | 'isResizeContainer' | 'doResizeContainer' | 'isPreferPageSize' | 'isPageVisible' | 'getPreferredPageSize' | 'getMinimumGraphSize' | 'getGridSize' | 'snap' | 'getCursorForCell' | 'paintBackground' | 'updatePageBreaks' | 'isPageBreaksVisible' | 'isSwimlaneSelectionEnabled' | 'getSwimlaneAt' | 'isSwimlane'>;
type PartialEvents = Pick<Graph, 'mouseListeners' | 'lastTouchEvent' | 'doubleClickCounter' | 'lastTouchCell' | 'fireDoubleClick' | 'tapAndHoldThread' | 'lastMouseX' | 'lastMouseY' | 'isMouseTrigger' | 'ignoreMouseEvents' | 'mouseMoveRedirect' | 'mouseUpRedirect' | 'lastEvent' | 'escapeEnabled' | 'invokesStopCellEditing' | 'enterStopsCellEditing' | 'isMouseDown' | 'nativeDblClickEnabled' | 'doubleTapEnabled' | 'doubleTapTimeout' | 'doubleTapTolerance' | 'lastTouchX' | 'lastTouchY' | 'lastTouchTime' | 'tapAndHoldEnabled' | 'tapAndHoldDelay' | 'tapAndHoldInProgress' | 'tapAndHoldValid' | 'initialTouchX' | 'initialTouchY' | 'tolerance' | 'isNativeDblClickEnabled' | 'getEventTolerance' | 'setEventTolerance' | 'escape' | 'click' | 'dblClick' | 'tapAndHold' | 'addMouseListener' | 'removeMouseListener' | 'updateMouseEvent' | 'getStateForTouchEvent' | 'isEventIgnored' | 'isSyntheticEventIgnored' | 'isEventSourceIgnored' | 'getEventState' | 'fireMouseEvent' | 'consumeMouseEvent' | 'fireGestureEvent' | 'sizeDidChange' | 'isCloneEvent' | 'isTransparentClickEvent' | 'isToggleEvent' | 'isGridEnabledEvent' | 'isConstrainedEvent' | 'isIgnoreTerminalEvent' | 'getPointForEvent' | 'isEscapeEnabled' | 'setEscapeEnabled' | 'isInvokesStopCellEditing' | 'setInvokesStopCellEditing' | 'isEnterStopsCellEditing' | 'setEnterStopsCellEditing' | 'getCursorForMouseEvent'>;
type PartialType = PartialGraph & PartialEvents;
export declare const EventsMixin: PartialType;
export {};
