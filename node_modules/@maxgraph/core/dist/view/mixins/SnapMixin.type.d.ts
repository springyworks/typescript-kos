import type Point from '../geometry/Point';
import type Rectangle from '../geometry/Rectangle';
declare module '../Graph' {
    interface Graph {
        /**
         * @default 0
         */
        snapTolerance: number;
        /**
         * Specifies the grid size.
         * @default 10
         */
        gridSize: number;
        /**
         * Specifies if the grid is enabled. This is used in {@link snap}.
         * @default true
         */
        gridEnabled: boolean;
        getSnapTolerance: () => number;
        /**
         * Snaps the given numeric value to the grid if {@link gridEnabled} is true.
         *
         * @param value Numeric value to be snapped to the grid.
         */
        snap: (value: number) => number;
        /**
         * Snaps the given delta with the given scaled bounds.
         *
         * @param delta
         * @param bounds
         * @param ignoreGrid default `false`
         * @param ignoreHorizontal default `false`
         * @param ignoreVertical default `false`
         */
        snapDelta: (delta: Point, bounds: Rectangle, ignoreGrid?: boolean, ignoreHorizontal?: boolean, ignoreVertical?: boolean) => Point;
        /**
         * Returns {@link gridEnabled}.
         */
        isGridEnabled: () => boolean;
        /**
         * Specifies if the grid should be enabled.
         *
         * @param value Boolean indicating if the grid should be enabled.
         */
        setGridEnabled: (value: boolean) => void;
        /**
         * Returns {@link gridSize}.
         */
        getGridSize: () => number;
        /**
         * Sets {@link gridSize}.
         */
        setGridSize: (value: number) => void;
    }
}
